c
post tasks_path, params: { task: @task_params }
post tasks_path, params: { task: task_params }
response.to_json
post tasks_path, params: { task: @task }
response.body
response
post tasks_path, params: { task: @task }
assert_redirected_to tasks_url
@task
post tasks_path, params: { task: @task }
[200~post tasks_path, params: { task: @task }
c
      post tasks_path, params: { task: { name: "Test Task", description: "Desc", due_date: Date.today, priority: "high", status: "blocked", employee: @employee } }c
      post tasks_path, params: { task: { name: "Test Task", description: "Desc", due_date: Date.today, priority: "high", status: "blocked", employee: @employee } }
[200~      post tasks_path, params: { task: { name: "Test Task", description: "Desc", due_date: Date.today, priority: "high", status: "blocked", employee: @employee } }
post tasks_url, params: { task: { name: "Test Task", description: "Desc", due_date: Date.today, priority: "high", status: "blocked", employee: @employee } }
@org
c
exit
@task.save!
@task.save
@task
c
taskÃ§
@task
c
@task
c
renders_one :input, types: {
    component: lambda { |**arguments|
      InputComponent.new(value: params[:search_box_query], **arguments, **DEFAULT_INPUT_PROPERTIES)
    },
    element: lambda { |**arguments|
      text_field_tag(
        DEFAULT_INPUT_PROPERTIES[:name],
        "",
        **DEFAULT_INPUT_PROPERTIES.merge(arguments)
      )
    }
  }
exit
 I18n.t(".statuses.#{status}")
c
 I18n.t(".statuses.#{status}")
c
    I18n.t(".statuses.#{status}")
=> 16:     I18n.t(".statuses.#{status}")
exit
exit]
    I18n.t(".statuses.#{status}")
    I18n.t(".task.statuses")
    I18n.t(".task.statuses.#{status}")
    I18n.t("activerecord.attributes.task.statuses.#{status}")
exit
    I18n.t("activerecord.attributes.task.statuses.#{status}")
self.class.humanized_enum("statuses", status)
