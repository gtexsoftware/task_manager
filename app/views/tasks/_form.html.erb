<%= turbo_frame_tag 'new_task' do %>
<% decorator = TaskDecorator.new(@task) %>
  <div class="task-form" data-controller="task" data-task-mode-value="<%= params[:action] %>" >
    <div class="form-wrapper">
      <%= render partial: 'tasks/form/assign_employee', locals: {
        employee: @task.employee,
      } %>
      <%= validation_error_for(@task, :org_user_id) %>
    </div>

    <div class="form-wrapper">
      <%= form_with model: task, class: 'form' do |form| %>
        <%= form.hidden_field :employee_id, value: @task.employee_id %>

        <fieldset>
            <div class="input-group">
              <div class="inline-inputs">
                <%= form.label :name, 'Task Title'  %>
                <%= form.text_field :name %>
                <%= validation_error_for(@task, :name) %>
              </div>

              <div class="inline-inputs">
                <%= form.label :description, 'Task Description' %>
                <%= form.text_area :description, {
                  rows: 5,
                  minlength: 3,
                  value: decorator&.description || @moment_decorator&.pre_filled_notes
                } %>
                <%# <%= validation_error_for(@task, :description) %>
              </div>

              <div class="inline-inputs">
                <%= form.label :due_date, t('.due_date') %>
                <%= form.date_field :due_date,
                  value: @task.due_date&.strftime('%Y-%m-%d') || @moment_decorator&.past_due_date&.strftime('%Y-%m-%d'),
                  min: Date.today.strftime('%Y-%m-%d')
                %>
                <%# <%= validation_error_for(@task, :due_date) %>
              </div>

              <div>
                <div class="inline-inputs">
                  <%= form.label :priority, t('.priority') %>
                  <%= form.select(:priority,
                      options_for_select([['Select Priority', '', {disabled: true, selected: true}]] + decorator.priority_options, @task.priority))
                  %>
                  <%# <%= validation_error_for(@task, :priority) %>
                </div>

                <div class="inline-inputs">
                  <%= form.label :status, t('.status') %>
                  <%= form.select :status,
                      options_for_select(
                        options_for_status(decorator),
                        @task.status
                      )
                  %>
                  <%# <%= validation_error_for(@task, :status) %>
                </div>
              </div>
            </div>
        </fieldset>

        <footer>
          <%= link_to 'Cancel', tasks_path, class: 'btn secondary' %>

          <%= render(ButtonComponent.new(data: { disable_with: 'Submitting' })) do %>
            <%= action_name == 'edit' ? 'Save' : 'Create' %>
          <% end %>
        </footer>
      <% end %>
    </div>
  </div>
<% end %>
